
vector:
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 100m
      memory:  100Mi
  persistence:
    enabled: true
    size: 10Gi
  extraVolumes:
  - name: aws-creds
    secret:
      secretName: aws-log-archive
  extraVolumeMounts:
  - name: aws-creds
    mountPath: /var/aws/
  customConfig:
    data_dir: /vector-data-dir
    api:
      enabled: true
      address: 127.0.0.1:8686
      playground: false
    sources:
      internal_metrics:
        type: internal_metrics

      # Mets en place un serveur http (port 8080) pour recevoir les logs
      http_server:
        type: http_server
        address: 0.0.0.0:8080

    transforms:

      # Permet d'avoir les lignes de logs de façon unitaire et non en tableau
      remap:
        type: remap
        inputs:
          - http_server

    sinks:
      # Exporte les métriques internes de vector au format prometheus
      prom_exporter:
        type: prometheus_exporter
        inputs: [internal_metrics]
        address: 0.0.0.0:9090
      
      vlogs:
        inputs:
          - remap
        type: "elasticsearch"
        endpoints: [ "http://vlogs:9428/insert/elasticsearch/" ]
        mode: "bulk"
        api_version: "v8"
        healthcheck:
          enabled: false
        query:
          _msg_field: "message"
          _time_field: "@timestamp"
          _stream_fields: "kubernetes.namespace_name,kubernetes.container_name"

victoria-logs-single:
  enabled: true
  server:
    fullnameOverride: vlogs
    retentionPeriod: 30
    resources:
      requests:
        cpu: 512m
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1024Mi
    image:
      repository: "docker.io/victoriametrics/victoria-logs"
    persistentVolume:
      enabled: true
      size: 30Gi
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      hosts: 
      - name: vlogs-dev.d290.dev.forge.minint.fr
        path: /
        port: http
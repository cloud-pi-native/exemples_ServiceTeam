env: &environment demo

keycloak_realm: &realm demo

# Krakend (APIM)
krakend:
  enabled: true

  labels:
    env: *environment
  
  krakend:
    env:
      - name: KC_REALM
        value: *realm
    
    # -- The default configuration has a settings files that
    # will be used to load several aspects of the configuration.
    settings:
      # FIXME: APIHost & CORSUrl replace placeholders
      urls.json: |-
        {
          "APIHost": "http://<BACKEND_SVC_NAME>:<BACKEND_SVC_PORT>",
          "JWKUrl": "http://keycloak:80/realms/referentiel-applications/protocol/openid-connect/certs",
          "CORSUrl": "https://<FRONTEND_DOMAIN_NAME>.apps.app1.numerique-interieur.com"
        }

  ingress:
    enabled: true
    hosts:
      # FIXME: Krakend host replace placeholder
      - host: "<APIM_DOMAIN_NAME>.apps.app1.numerique-interieur.com"
        paths:
          - path: /
            pathType: Prefix
    tls: []

# Keycloak (IdP)
keycloak:
  enabled: true

  ingress:
      enabled: true
      scheme: https  # Set to 'http' if TLS is not enabled
      # FIXME: Keycloak URL replace placeholder
      hostname: "<SSO_DOMAIN_NAME>.apps.app1.numerique-interieur.com"
      path: /
      pathType: Prefix
      tls: true  # Set to 'false' to disable TLS
  
  production: false  # Set to 'true' for prod with TLS enabled
  proxy: edge  # Set to 'passthrough' if TLS is not enabled (deprecated)
  # proxyHeaders: xforwarded  # default when 'proxy: edge'

  externalDatabase:
    # FIXME: Name of the CNPG generated cluster-app secret
    existingSecret: "cnpg-cluster-app"

  extraEnvVars:
    # Allows using Keycloak without TLS cert configured
    - name: KEYCLOAK_SSLVERIFY
      value: "false"
    # Allows using Keycloak without TLS enabled
    # - name: KC_HTTP_ENABLED
    #   value: "true"

# CNPG (DB)
cluster:
  enabled: true

  backups:
    enabled: false
    # destinationPath: "s3://<bucket><path>"
    secret:
      create: false
      name: ""

keycloak:
  fullnameOverride: keycloak
  
  clientSecretAuthTypeEnabled: true  # Allows using 'client-seret' auth flow (default is authorization-code flow when set to 'false')

  global:
    compatibility:
      openshift:
        adaptSecurityContext: force
  
  auth:
    adminUser: admin
    existingSecret: demo-keycloak-auth-secret
    passwordSecretKey: KEYCLOAK_PASSWORD

  # extraEnvVars: ""
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  
  keycloakConfigCli:
    enabled: true
    existingConfigmap: demo-keycloak-realm-cm
    extraEnvVars:
      - name: IMPORT_VARSUBSTITUTION_ENABLED
        value: "true"
      - name: KEYCLOAK_URL
        value: "$(KEYCLOAK_URL_OVERRIDE)"
    extraEnvVarsCM: demo-keycloak-env-cm
    extraEnvVarsSecret: demo-keycloak-auth-secret
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    containerSecurityContext:
      enabled: false
    podSecurityContext:
      enabled: false

  containerPorts:
    http: 8080
    https: 8443
    infinispan: 7800
  
  resources:
    requests:
      cpu: 250m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  
  externalDatabase:
    existingSecretHostKey: "host"
    existingSecretPortKey: "port"
    existingSecretUserKey: "username"
    existingSecretDatabaseKey: "dbname"
    existingSecretPasswordKey: "password"
  postgresql:
    enabled: false
  
  # production: false
  # proxy: edge  # deprecated
  # proxyHeaders: xforwarded  # default when 'proxy: edge'
  
  cache:
    enabled: true

  podSecurityContext:
    enabled: false
    runAsUser: null
    runAsGroup: null
    fsGroup: null
  containerSecurityContext:
    enabled: true
    runAsUser: null
    runAsGroup: null
    fsGroup: null
    runAsNonRoot: true
    privileged: false
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
      add: ["NET_BIND_SERVICE"]
  
  networkPolicy:
    enabled: false
  
  # adminIngress:
  #   enabled: true
  #   hostname: ""

  ingress:
      # enabled: true
      # hostname: ""
      # path: /
      # pathType: Prefix
      apiVersion: ""
      ingressClassName: ""
      annotations: {}
        # haproxy.org/cors-allow-headers: "X-Forwarded-For, Forwarded"
      selfSigned: false
      servicePort: http
      # tls: false

prometheus-blackbox-exporter:
  fullnameOverride: blackbox-exporter
  commonLabels:
    tier: monitoring
    component: prometheus-blackbox
    app: example-app
  resources:
    requests:
      memory: "64Mi"
      cpu: "100m"
    limits:
      memory: "64Mi"
      cpu: "100m"
  serviceAccount:
    create: false
  extraSecretMounts: # Monte un secret comme volume, utile pour injecter des tokens JWT
    - name: token-volume
      mountPath: /token
      secretName: blackbox-exporter-token
      readOnly: true
      defaultMode: 420
  config:
    modules: # Définition des modules, aka comment blackbox doit se connecter au endpoint et traiter la réponse reçue
      http_2xx:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          follow_redirects: true
          preferred_ip_protocol: "ip4"
      http_2xx_with_auth:
        prober: http
        timeout: 5s
        http:
          valid_http_versions: ["HTTP/1.1", "HTTP/2.0"]
          method: GET
          follow_redirects: true
          fail_if_ssl: false
          fail_if_not_ssl: false
          tls_config:
            insecure_skip_verify: true
          preferred_ip_protocol: "ip4"
          ip_protocol_fallback: false
          authorization: # Utilisation du secret monté auparavent
            credentials_file: "/token/credential.token"
      http_4xx_no_auth:
        prober: http
        http:
          method: GET
          valid_status_codes: [400,401]  # 400 : bad auth, 401 : no auth
          preferred_ip_protocol: "ip4"
          ip_protocol_fallback: false
          follow_redirects: true
          fail_if_ssl: false
          fail_if_not_ssl: false
          tls_config:
            insecure_skip_verify: true
  serviceMonitor: # Section pour configurer le ServiceMonitor, aka quel endpoint (et le module associé) à envoyer à blackbox
    enabled: true
    selfMonitor:
      enabled: true
    targets: # Le chart définit un label target prenant la valeur name, utile pour des configurer des alertes
    - name: pgrest-live                 # Le nom humain de la cible pour la sonde blackbox
      url: http://pgrest:3001/live      # L'URL effective
      labels: {}                        # Ajout de label ?
      interval: 15s                     # Interval entre 2 lancements de sonde
      scrapeTimeout: 15s                # Délai avant d'abandonner
      module: http_2xx                  # Module à utiliser, voir configuration plus haut
    - name: pgrest-ready
      url: http://pgrest:3001/ready
      labels: {}
      interval: 15s
      scrapeTimeout: 15s
      module: http_2xx
    - name: pgrest-request-valid
      url: http://pgrest:3000/identites?prenoms_officiels=ilike.Astérix&limit=10
      labels: {}
      interval: 15s
      scrapeTimeout: 15s
      module: http_2xx_with_auth
    - name: pgrest-request-no-auth
      url: http://pgrest:3000/identites?prenoms_officiels=ilike.Astérix&limit=10
      labels: {}
      interval: 15s
      scrapeTimeout: 15s
      module: http_4xx_no_auth
  prometheusRule: # Défini les alertes prometheus 
    enabled: false
    additionalLabels: {}
    namespace: ""
    rules:
    - alert: PostgrestAPIMonitor
      expr: |
        probe_success{namespace="monnamespace", target="pgrest-live"} == 0
      annotations:
        description: |
          Le endpoint live du service pgrest ne repond plus correctement
        summary: "[Example-appp] PGRest live endpoint fail"
      labels:
        namespace: "monnamespace"
        refapp: "example-app-refapp"
        severity: critical